@import "../../global.scss";

.topbar{
    width: 100%;
    height: 70px;
    background-color: white;
    color: $mainColor;
    position: fixed;                            // makes the container stay in same position
    top: 0;
    z-index: 3;                                 // determines the stackig order of elements
    transition: all 1s ease;                    // specifies which components in container, duration of transition, type of transition

    .wrapper{
        padding: 10px 30px;                     // spacing between component edge and text or content
        display: flex;
        align-items: center;                    // makes all items be inline with each other
        justify-content: space-between;         // makes the content within the container be evenly spaced

        .left{
            display: flex;
            align-items: center;

            .logo{
                font-size: 40px;
                font-weight: 700;
                text-decoration: none;          // eg. for an anchor or a link ... removes how the link text looks and makes it plain text
                color: inherit;                 // inherit makes teh property take on the same property as the parent container
                margin-right: 40px;             // determins how large margin from specified direction
            }

            .itemContainer{
                display: flex;
                align-items: center;
                margin-left: 30px;

                @include mobile{
                    display: none;
                }

                .icon{
                    font-size: 18px;
                    margin-right: 5px;
                }

                span{
                    font-size: 15px;
                    font-weight: 500;
                }
            }
        }

        .right{

            .hamburger{
                width: 32px;
                height: 25px;
                display: flex;
                justify-content: space-between;
                flex-direction: column;
                cursor: pointer;

                span{
                    width: 100%;
                    height: 3px;
                    background-color: $mainColor;
                    transform-origin: left;             // specifies where the transformation is on component
                    transition: all 2s ease;
                }
            }
        }
    }

    &.active{
        background-color: $mainColor;
        color: white;

        .hamburger{
            span{
                &:first-child{
                    background-color: white;
                    transform: rotate(45deg);           // rotation transformation
                }
                &:nth-child(2){
                    opacity: 0;
                }
                &:last-child{
                    background-color: white;
                    transform: rotate(-45deg);
                }
            }
        }
    }
}